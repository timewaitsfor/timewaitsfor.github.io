<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>研读代码：CompGCN</title>
    <link href="/2020/08/12/%E7%A0%94%E8%AF%BB%E4%BB%A3%E7%A0%81%EF%BC%9ACompGCN/"/>
    <url>/2020/08/12/%E7%A0%94%E8%AF%BB%E4%BB%A3%E7%A0%81%EF%BC%9ACompGCN/</url>
    
    <content type="html"><![CDATA[<h2 id="先修知识"><a href="#先修知识" class="headerlink" title="先修知识"></a>先修知识</h2><h3 id="logging-包的使用"><a href="#logging-包的使用" class="headerlink" title="logging 包的使用"></a>logging 包的使用</h3><p>可以使得日志输出到指定文件中</p><h3 id="torch-set-rng-state-是什么？"><a href="#torch-set-rng-state-是什么？" class="headerlink" title="torch.set_rng_state 是什么？"></a>torch.set_rng_state 是什么？</h3><p>初步看，感觉是关于GPU提速的</p><h3 id="OrderedSet-是什么？"><a href="#OrderedSet-是什么？" class="headerlink" title="OrderedSet 是什么？"></a>OrderedSet 是什么？</h3><p>就是有序集合</p><h3 id="DataLoader-的使用"><a href="#DataLoader-的使用" class="headerlink" title="DataLoader 的使用"></a>DataLoader 的使用</h3><p>向上取整</p><h3 id="Jupyter-的使用"><a href="#Jupyter-的使用" class="headerlink" title="Jupyter 的使用"></a>Jupyter 的使用</h3><p>排版清晰的help指令</p><p>更详细的help指令</p><h2 id="模型细节"><a href="#模型细节" class="headerlink" title="模型细节"></a>模型细节</h2><p>subject –&gt; relation –&gt; object<br>指代KG中的 head –&gt; relation –&gt; tail</p>]]></content>
    
    
    <categories>
      
      <category>GNN</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Coding</tag>
      
      <tag>GNN</tag>
      
      <tag>PHD</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>深度学习配置</title>
    <link href="/2020/08/10/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E9%85%8D%E7%BD%AE/"/>
    <url>/2020/08/10/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h3 id="查询pytorch版本"><a href="#查询pytorch版本" class="headerlink" title="查询pytorch版本"></a>查询pytorch版本</h3><pre><code class="hljs python"><span class="hljs-keyword">import</span> torchprint(torch.__version__)</code></pre><h3 id="查询Cuda版本"><a href="#查询Cuda版本" class="headerlink" title="查询Cuda版本"></a>查询Cuda版本</h3><pre><code class="hljs awk">cat <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/cuda/</span>version.txt</code></pre><p>或者</p><pre><code class="hljs ebnf"><span class="hljs-attribute">nvcc -V</span></code></pre><h3 id="查询cudnn版本"><a href="#查询cudnn版本" class="headerlink" title="查询cudnn版本"></a>查询cudnn版本</h3><pre><code class="hljs gradle">cat <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/cuda/i</span>nclude/cudnn.h | <span class="hljs-keyword">grep</span> CUDNN_MAJOR -A <span class="hljs-number">2</span></code></pre>]]></content>
    
    
    <categories>
      
      <category>PHD</category>
      
    </categories>
    
    
    <tags>
      
      <tag>设置</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>刷优质代码</title>
    <link href="/2020/08/08/%E5%88%B7%E4%BC%98%E8%B4%A8%E4%BB%A3%E7%A0%81/"/>
    <url>/2020/08/08/%E5%88%B7%E4%BC%98%E8%B4%A8%E4%BB%A3%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h2 id="提升Programming-Ability的记录"><a href="#提升Programming-Ability的记录" class="headerlink" title="提升Programming Ability的记录"></a>提升Programming Ability的记录</h2><ol><li>研读论文 GompGCN 的代码</li></ol><h2 id="研读论文GompGCN的代码"><a href="#研读论文GompGCN的代码" class="headerlink" title="研读论文GompGCN的代码"></a>研读论文GompGCN的代码</h2>]]></content>
    
    
    <categories>
      
      <category>PHD</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Coding</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mo的自由王国宪法</title>
    <link href="/2020/08/07/Mo%E7%9A%84%E8%87%AA%E7%94%B1%E7%8E%8B%E5%9B%BD%E5%AE%AA%E6%B3%95/"/>
    <url>/2020/08/07/Mo%E7%9A%84%E8%87%AA%E7%94%B1%E7%8E%8B%E5%9B%BD%E5%AE%AA%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="创建博客"><a href="#创建博客" class="headerlink" title="创建博客"></a>创建博客</h2><h3 id="2020-08-07"><a href="#2020-08-07" class="headerlink" title="2020-08-07"></a>2020-08-07</h3><p> hexo new post “从零开始搭建Hexo博客”<br> hexo new post “我的博客使用规则”<br> hexo new post “刷LeetCode”<br> hexo new post “学习C++”<br> hexo new post “学习线性代数”<br> hexo new post “李宏毅：深度学习”<br> hexo new post “刷优质代码”<br> hexo new post “准备秋招”<br> hexo new post “深度学习配置”<br> hexo new post “研读代码：CompGCN”</p><h3 id="2020-08-08"><a href="#2020-08-08" class="headerlink" title="2020-08-08"></a>2020-08-08</h3><p>有几件事还没搞明白：</p><ol><li>如何对域内的链接进行超链接</li><li>VS code 无法预览Hexo中的图片</li></ol><h2 id="issues"><a href="#issues" class="headerlink" title="issues"></a>issues</h2><h3 id="2020-08-11-16-39-08"><a href="#2020-08-11-16-39-08" class="headerlink" title="2020-08-11 16:39:08"></a>2020-08-11 16:39:08</h3><h4 id="npm-安装的github包如何删除？"><a href="#npm-安装的github包如何删除？" class="headerlink" title="npm 安装的github包如何删除？"></a>npm 安装的github包如何删除？</h4><p>其实跟从哪安装的没关系，对于–save的包，删除的时候也需要<br><code>npm uninstall XXX --save</code></p>]]></content>
    
    
    <categories>
      
      <category>个人</category>
      
    </categories>
    
    
    <tags>
      
      <tag>设置</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>从零开始构建Hexo博客</title>
    <link href="/2020/08/07/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%9E%84%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/"/>
    <url>/2020/08/07/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%9E%84%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h2><p>这篇post是本博客的第一篇博客，主要记录如何构建Hexo静态博客的<br>本博文分为以下N个步骤：</p><ol><li>环境配置</li><li>远程部署</li><li>主题更换</li><li>插件管理</li><li>issues</li><li>references</li></ol><h2 id="第一步：-环境配置"><a href="#第一步：-环境配置" class="headerlink" title="第一步： 环境配置"></a>第一步： 环境配置</h2><p>首先安装Git, Node.js, Hexo<br>安装Hexo是我不太熟悉的，所以这里展开介绍一下：</p><pre><code class="hljs awk">$ npm install hexo-cli -g    <span class="hljs-regexp">//</span>使用npm 安装 hexo 这个library$ hexo init blog    <span class="hljs-regexp">//</span>找到一个文件夹作为存放 hexo 博客的路径，然后初始化 hexo 环境，这里初始化的文件夹名为 blog (blog可以任意指定名称)$ cd blog    <span class="hljs-regexp">//</span>进入到 blog 目录$ npm install    <span class="hljs-regexp">//</span>安装 hexo$ hexo server    <span class="hljs-regexp">//</span>启动本地服务（这个为hexo的常见指令之一，也可以写为 hexo s 用来启动本地的测试服务器）</code></pre><p>（这里缺一个<code>hexo s</code> 启动后的图）<br>一般命令行会提示，<em>hexo is running at  <a href="http://localhost:4000/">http://localhost:4000</a></em>, 可以再浏览器试试看默认的hexo博客是什么样子的</p><h2 id="第二步：远程部署"><a href="#第二步：远程部署" class="headerlink" title="第二步：远程部署"></a>第二步：远程部署</h2><p>首先要创建一个GitHub账号，然后新建一个repository<br>一般上传代码分为两种方式，一种是HTTP（需要每次输入密码），另外一种方式是SSH（需要公钥和密钥配合）<br>我们这里需要用第二种，SSH的连接方式，需要在GitHub中添加SSH key</p><pre><code class="hljs jboss-cli">$ <span class="hljs-keyword">cd</span> ~<span class="hljs-string">/.ssh</span>    <span class="hljs-string">//</span>进入 <span class="hljs-string">.ssh</span> 目录中$ ssh-keygen -t rsa -C <span class="hljs-string">&quot;你自己的邮箱地址&quot;</span></code></pre><p>如果已经有SSH key了建议直接删掉，因为有可能是其他账号的密钥和公钥，这个很麻烦，我还没搞明白怎么配置多账号的密钥，以后有空可以试试<br>第二行指令执行完，会出现id_rsa 、 id_rsa.pub 、 know_hosts 三个文件<br>把~/.ssh/id_rsa.pub中的公钥信息复制，粘贴到GitHub的SSH and GPG keys设置里，最后完成是这样<br>[为GitHub添加公钥]</p><img src="/2020/08/07/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%9E%84%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/ssh_key.jpeg" class=""><p>使用<code>$ ssh -T git@github.com</code>测试是否添加公钥成功，如果出现 <em>You’ve successfully authenticated</em> 则表明添加成功<br>部署需要修改，博客路径下的_config.yml文件<br>找到deploy关键字</p><pre><code class="hljs less"><span class="hljs-attribute">deploy</span>:  <span class="hljs-attribute">type</span>: git   <span class="hljs-attribute">repo</span>: git<span class="hljs-variable">@github</span>.<span class="hljs-attribute">com</span>:username.github.io.git #username同上要换成你自己的用户名  <span class="hljs-attribute">branch</span>: master</code></pre><p>将repo改为，GitHub上创建的git Code<br>其他的很多配置信息自己瞎改就行了，很简单，也很好玩<br>然后使用三个命令来完成远程部署：</p><pre><code class="hljs properties"><span class="hljs-attr">hexo</span> <span class="hljs-string">clean</span><span class="hljs-attr">hexo</span> <span class="hljs-string">g</span><span class="hljs-attr">hexo</span> <span class="hljs-string">s</span></code></pre><p>（就这么简单！）</p><h2 id="第三步：主题更换"><a href="#第三步：主题更换" class="headerlink" title="第三步：主题更换"></a>第三步：主题更换</h2><p>以前用过很多主题，比如说鼎鼎大名的<a href="https://theme-next.iissnan.com/getting-started.html">NEXT</a>，之前给女朋友用的<a href="https://github.com/fi3ework/hexo-theme-archer">archer</a><br>这次我想用的是<a href="https://github.com/fluid-dev/hexo-theme-fluid">fluid</a><br><a href="https://hexo.fluid-dev.com/">fluid主题展示</a><br>fluid的文档做的特别好，可以参考 <a href="https://hexo.fluid-dev.com/docs/guide/#%E4%B8%BB%E9%A2%98%E7%AE%80%E4%BB%8B">配置指南</a><br>按照文档要求的，将<a href="https://github.com/fluid-dev/hexo-theme-fluid/releases">最新 release 版本</a>下载解压到themes目录下就行了<br>这里还涉及到一个<a href="https://hexo.fluid-dev.com/docs/guide/#%E8%A6%86%E7%9B%96%E9%85%8D%E7%BD%AE">覆盖配置</a>的配置设置<br>后面的就可以随便玩了</p><h2 id="第四步：插件管理"><a href="#第四步：插件管理" class="headerlink" title="第四步：插件管理"></a>第四步：插件管理</h2><p>（略）这个后面再补充  </p><h2 id="issues"><a href="#issues" class="headerlink" title="issues"></a>issues</h2><ol><li>macbook 在更新 homebrew时遇到错误： error The following directories are not writable by your user<br> 解决办法：<a href="https://stackoverflow.com/questions/61418325/homebrew-error-the-following-directories-are-not-writable-by-your-user">传送门</a></li></ol><h2 id="references"><a href="#references" class="headerlink" title="references"></a>references</h2><p>[1] <a href="https://jinchaowen.github.io/2020/04/06/hello-world/#more">Hexo+Github 搭建个人博客网站</a></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>博客搭建</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
